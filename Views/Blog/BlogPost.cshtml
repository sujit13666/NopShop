@model BlogPostModel
@using Nop.Web.Models.Blogs;
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
    
    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
}
@section left {
    @Html.Action("BlogMonths", "Blog")
    @Html.Action("BlogTags", "Blog")
}
<div class="col-sm-9">
    
    <div class="blog-post-area">
        <div class="row">
            <div class="col-md-9">
                <h2 class="title text-center">@Model.Title</h2>
            </div>
        </div>
        <div class="post-meta margin-orange" >
								<ul class="list-inline">
									<li><i class="fa fa-user"></i> Mac Doe</li>
									<li><i class="fa fa-clock-o"></i> @Model.CreatedOn.ToString("T")</li>
									<li><i class="fa fa-calendar"></i>@Model.CreatedOn.ToString("D")</li>
								</ul>
								
					 </div>
    </div>


    

    
    <div class="">
       
        @Html.Widget("blogpost_page_before_body")
        <div class="rating-area">
            @Html.Raw(Model.Body)
        </div>
        @if (Model.Tags.Count > 0)
        {
            <div class="tag pull-right">
                <label><strong>@T("Blog.Tags"):</strong></label>
             
                @for (int i = 0; i < Model.Tags.Count; i++)
                {
                    var tag = Model.Tags[i];
                    <a class="color" style="color:orange" href="@Url.RouteUrl("BlogByTag", new { tag = tag })">@tag</a>
                    if (i != Model.Tags.Count - 1)
                    {
                        <span class="separator">/</span>
                    }
                }
               
            </div>
        }
        @Html.Widget("blogpost_page_before_comments")
        @if (Model.AllowComments)
        {
            <div class=" blog-post-area text-area">
                <div class="title">
                    <h4 class="">@T("Blog.Comments.LeaveYourComment")</h4>
                </div>
                @*<div class="notifications">
                    <div class="message-error">@Html.ValidationSummary(true)</div>
                    @{
                        var result = TempData["nop.blog.addcomment.result"] as string;
                    }
                    @if (!String.IsNullOrEmpty(result))
                    {
                        <div class="result">@result</div>
                    }
                </div>*@
                @using (Html.BeginForm())
                {
                    
                    <div class="form-fields row blog-post-area text-area">
                        <div class=" form-group  inputs single-post-area">
                            <div class="col-md-2 bk-orange" style="margin-left:15px">
                            @Html.LabelFor(model => model.AddNewComment.CommentText, new { @class = "col-md-2 control-label" }, ":")
                            </div>
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.AddNewComment.CommentText, new { @class = "form-control",rows="10" })
                            </div>
                            <div class="col-md-offset-2 col-md-4">
                                @Html.ValidationMessageFor(model => model.AddNewComment.CommentText)
                            </div>
                        </div>
                        @if (Model.AddNewComment.DisplayCaptcha)
                        {
                            <div class="captcha-box">
                                @Html.Raw(Html.GenerateCaptcha())
                            </div>
                        }
                    </div>
                     
                    <div class="row">
                        <div class="pull-left col-md-2">
                            <div class="buttons ">
                                <input type="submit" name="add-comment" class="btn btn-primary" value="@T("Blog.Comments.SubmitButton")" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            if (Model.Comments.Count > 0)
            {
                <div class="comment-list">
                    <div class="title">
                        <h4>@T("Blog.Comments")</h4>
                    </div>
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="blog-comment row"  style="margin-bottom:10px">
                            
                            <div class="comment-content col-md-9 media">
                             
                              <div class="comment-time title mid-content-title" style="border: none">                                   
                                <div class="post-meta" >
								    <ul class="list-inline">
									    <li><i class="fa fa-user"></i>@(comment.CustomerName)   </li>
									    <li><i class="fa fa-clock-o"></i> @Model.CreatedOn.ToString("D")</li>
									    <li><i class="fa fa-calendar"></i> @Model.CreatedOn.ToString("T")</li>
								    </ul>								
					            </div>
                              </div>
                                <div class="comment-body">
                                    @Html.Raw(Nop.Core.Html.HtmlHelper.FormatText(comment.CommentText, false, true, false, false, false, false))
                                </div>
                               
                            </div>
                            @Html.Widget("blogpost_page_inside_comment")
                        </div>
                    }
                </div>
            }
        }
        @Html.Widget("blogpost_page_after_comments")
    </div>
</div>






